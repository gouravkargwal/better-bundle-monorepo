generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CollectionData {
  collection_id   String   @db.VarChar
  title           String   @db.VarChar(500)
  handle          String   @db.VarChar(255)
  description     String?
  template_suffix String?  @db.VarChar(100)
  seo_title       String?  @db.VarChar(500)
  seo_description String?
  image_url       String?  @db.VarChar(1000)
  image_alt       String?  @db.VarChar(500)
  product_count   Int
  is_automated    Boolean
  is_active       Boolean
  metafields      Json?    @db.Json
  extras          Json?    @db.Json
  id              String   @id @db.VarChar
  created_at      DateTime @db.Timestamp(6)
  updated_at      DateTime @db.Timestamp(6)
  shop_id         String   @db.VarChar
  shops           shops    @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([collection_id], map: "ix_CollectionData_collection_id")
  @@index([handle], map: "ix_CollectionData_handle")
  @@index([is_automated], map: "ix_CollectionData_is_automated")
  @@index([product_count], map: "ix_CollectionData_product_count")
  @@index([shop_id], map: "ix_CollectionData_shop_id")
  @@index([title], map: "ix_CollectionData_title")
}

model CustomerData {
  customer_id        String    @db.VarChar
  email              String?   @db.VarChar(255)
  first_name         String?   @db.VarChar(100)
  last_name          String?   @db.VarChar(100)
  total_spent        Float
  order_count        Int
  last_order_date    DateTime? @db.Timestamp(6)
  tags               Json?     @db.Json
  created_at_shopify DateTime? @db.Timestamp(6)
  last_order_id      String?   @db.VarChar(100)
  location           Json?     @db.Json
  metafields         Json?     @db.Json
  state              String?   @db.VarChar(50)
  verified_email     Boolean
  tax_exempt         Boolean
  default_address    Json?     @db.Json
  addresses          Json?     @db.Json
  currency_code      String?   @db.VarChar(10)
  customer_locale    String?   @db.VarChar(10)
  is_active          Boolean
  extras             Json?     @db.Json
  id                 String    @id @db.VarChar
  created_at         DateTime  @db.Timestamp(6)
  updated_at         DateTime  @db.Timestamp(6)
  shop_id            String    @db.VarChar
  shops              shops     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([customer_id], map: "ix_CustomerData_customer_id")
  @@index([email], map: "ix_CustomerData_email")
  @@index([last_order_date], map: "ix_CustomerData_last_order_date")
  @@index([shop_id], map: "ix_CustomerData_shop_id")
  @@index([state], map: "ix_CustomerData_state")
  @@index([total_spent], map: "ix_CustomerData_total_spent")
  @@index([verified_email], map: "ix_CustomerData_verified_email")
}

model OrderData {
  order_id                  String           @db.VarChar
  order_name                String?          @db.VarChar(100)
  customer_id               String?          @db.VarChar(100)
  customer_email            String?          @db.VarChar(255)
  customer_phone            String?          @db.VarChar(50)
  customer_display_name     String?          @db.VarChar(255)
  customer_state            String?          @db.VarChar(50)
  customer_verified_email   Boolean?
  customer_created_at       DateTime?        @db.Timestamp(6)
  customer_updated_at       DateTime?        @db.Timestamp(6)
  customer_default_address  Json?            @db.Json
  total_amount              Float
  subtotal_amount           Float?
  total_tax_amount          Float?
  total_shipping_amount     Float?
  total_refunded_amount     Float?
  total_outstanding_amount  Float?
  order_date                DateTime         @db.Timestamp(6)
  processed_at              DateTime?        @db.Timestamp(6)
  cancelled_at              DateTime?        @db.Timestamp(6)
  cancel_reason             String?          @db.VarChar(500)
  order_locale              String?          @db.VarChar(10)
  currency_code             String?          @db.VarChar(10)
  presentment_currency_code String?          @db.VarChar(10)
  confirmed                 Boolean
  test                      Boolean
  financial_status          String?          @db.VarChar(50)
  fulfillment_status        String?          @db.VarChar(50)
  order_status              String?          @db.VarChar(50)
  tags                      Json?            @db.Json
  note                      String?
  note_attributes           Json?            @db.Json
  shipping_address          Json?            @db.Json
  billing_address           Json?            @db.Json
  discount_applications     Json?            @db.Json
  metafields                Json?            @db.Json
  fulfillments              Json?            @db.Json
  transactions              Json?            @db.Json
  extras                    Json?            @db.Json
  id                        String           @id @db.VarChar
  created_at                DateTime         @db.Timestamp(6)
  updated_at                DateTime         @db.Timestamp(6)
  shop_id                   String           @db.VarChar
  shops                     shops            @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  line_item_data            line_item_data[]

  @@index([currency_code], map: "ix_OrderData_currency_code")
  @@index([customer_email], map: "ix_OrderData_customer_email")
  @@index([customer_id], map: "ix_OrderData_customer_id")
  @@index([customer_state], map: "ix_OrderData_customer_state")
  @@index([financial_status], map: "ix_OrderData_financial_status")
  @@index([fulfillment_status], map: "ix_OrderData_fulfillment_status")
  @@index([order_date], map: "ix_OrderData_order_date")
  @@index([order_id], map: "ix_OrderData_order_id")
  @@index([order_status], map: "ix_OrderData_order_status")
  @@index([shop_id], map: "ix_OrderData_shop_id")
  @@index([total_amount], map: "ix_OrderData_total_amount")
}

model ProductData {
  product_id               String    @db.VarChar
  title                    String    @db.VarChar(500)
  handle                   String    @db.VarChar(255)
  description              String?
  description_html         String?
  product_type             String?   @db.VarChar(100)
  vendor                   String?   @db.VarChar(255)
  tags                     Json?     @db.Json
  status                   String?   @db.VarChar
  total_inventory          Int?
  price                    Float
  compare_at_price         Float?
  inventory                Int?
  image_url                String?   @db.VarChar(1000)
  image_alt                String?   @db.VarChar(500)
  product_created_at       DateTime? @db.Timestamp(6)
  product_updated_at       DateTime? @db.Timestamp(6)
  online_store_url         String?   @db.VarChar(1000)
  online_store_preview_url String?   @db.VarChar(1000)
  seo_title                String?   @db.VarChar(500)
  seo_description          String?
  template_suffix          String?   @db.VarChar(100)
  variants                 Json?     @db.Json
  images                   Json?     @db.Json
  media                    Json?     @db.Json
  options                  Json?     @db.Json
  collections              Json?     @db.Json
  metafields               Json?     @db.Json
  extras                   Json?     @db.Json
  is_active                Boolean
  id                       String    @id @db.VarChar
  created_at               DateTime  @db.Timestamp(6)
  updated_at               DateTime  @db.Timestamp(6)
  shop_id                  String    @db.VarChar
  shops                    shops     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([is_active], map: "ix_ProductData_is_active")
  @@index([price], map: "ix_ProductData_price")
  @@index([product_id], map: "ix_ProductData_product_id")
  @@index([product_type], map: "ix_ProductData_product_type")
  @@index([product_updated_at], map: "ix_ProductData_product_updated_at")
  @@index([shop_id], map: "ix_ProductData_shop_id")
  @@index([status], map: "ix_ProductData_status")
  @@index([total_inventory], map: "ix_ProductData_total_inventory")
  @@index([vendor], map: "ix_ProductData_vendor")
}

model billing_events {
  plan_id          String        @db.VarChar
  type             String        @db.VarChar
  data             Json          @db.Json
  billing_metadata Json          @db.Json
  occurred_at      DateTime      @db.Timestamp(6)
  processed_at     DateTime      @db.Timestamp(6)
  id               String        @id @default(cuid()) @db.VarChar
  created_at       DateTime      @db.Timestamp(6)
  updated_at       DateTime      @db.Timestamp(6)
  shop_id          String        @db.VarChar
  billing_plans    billing_plans @relation(fields: [plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shops            shops         @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([occurred_at], map: "ix_billing_event_occurred_at")
  @@index([processed_at], map: "ix_billing_event_processed_at")
  @@index([shop_id], map: "ix_billing_event_shop_id")
  @@index([type], map: "ix_billing_event_type")
  @@index([occurred_at], map: "ix_billing_events_occurred_at")
  @@index([plan_id], map: "ix_billing_events_plan_id")
  @@index([processed_at], map: "ix_billing_events_processed_at")
  @@index([shop_id], map: "ix_billing_events_shop_id")
  @@index([type], map: "ix_billing_events_type")
}

model billing_invoices {
  plan_id           String        @db.VarChar
  invoice_number    String        @unique @db.VarChar(50)
  status            String        @db.VarChar
  subtotal          Decimal       @db.Decimal(10, 2)
  taxes             Decimal       @db.Decimal(10, 2)
  discounts         Decimal       @db.Decimal(10, 2)
  total             Decimal       @db.Decimal(10, 2)
  currency          String        @db.VarChar(3)
  period_start      DateTime      @db.Timestamp(6)
  period_end        DateTime      @db.Timestamp(6)
  metrics_id        String        @db.VarChar(255)
  due_date          DateTime      @db.Timestamp(6)
  paid_at           DateTime?     @db.Timestamp(6)
  payment_method    String?       @db.VarChar(50)
  payment_reference String?       @db.VarChar(255)
  id                String        @id @default(cuid()) @db.VarChar
  created_at        DateTime      @db.Timestamp(6)
  updated_at        DateTime      @db.Timestamp(6)
  shop_id           String        @db.VarChar
  billing_plans     billing_plans @relation(fields: [plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shops             shops         @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "ix_billing_invoice_created_at")
  @@index([due_date], map: "ix_billing_invoice_due_date")
  @@index([plan_id], map: "ix_billing_invoice_plan_id")
  @@index([shop_id], map: "ix_billing_invoice_shop_id")
  @@index([status], map: "ix_billing_invoice_status")
  @@index([due_date], map: "ix_billing_invoices_due_date")
  @@index([paid_at], map: "ix_billing_invoices_paid_at")
  @@index([shop_id], map: "ix_billing_invoices_shop_id")
  @@index([status], map: "ix_billing_invoices_status")
}

model billing_plans {
  shop_domain      String             @db.VarChar(255)
  name             String             @db.VarChar(100)
  type             String             @db.VarChar
  status           String             @db.VarChar
  configuration    Json               @db.Json
  effective_from   DateTime           @db.Timestamp(6)
  effective_until  DateTime?          @db.Timestamp(6)
  is_trial_active  Boolean
  trial_threshold  Decimal            @db.Decimal(10, 2)
  trial_revenue    Decimal            @db.Decimal(12, 2)
  id               String             @id @default(cuid()) @db.VarChar
  created_at       DateTime           @db.Timestamp(6)
  updated_at       DateTime           @db.Timestamp(6)
  shop_id          String             @unique(map: "ix_billing_plan_shop_id") @db.VarChar
  billing_events   billing_events[]
  billing_invoices billing_invoices[]
  shops            shops              @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([effective_from], map: "ix_billing_plan_effective_from")
  @@index([shop_domain], map: "ix_billing_plan_shop_domain")
  @@index([status], map: "ix_billing_plan_status")
  @@index([effective_from], map: "ix_billing_plans_effective_from")
  @@index([shop_domain], map: "ix_billing_plans_shop_domain")
  @@index([shop_id], map: "ix_billing_plans_shop_id")
  @@index([status], map: "ix_billing_plans_status")
}

model collection_features {
  collection_id          String   @db.VarChar
  product_count          Int
  is_automated           Boolean
  view_count_30d         Int
  unique_viewers_30d     Int
  click_through_rate     Float?
  bounce_rate            Float?
  avg_product_price      Float?
  min_product_price      Float?
  max_product_price      Float?
  price_range            Float?
  price_variance         Float?
  conversion_rate        Float?
  revenue_contribution   Float?
  top_products           Json     @db.Json
  top_vendors            Json     @db.Json
  performance_score      Float
  seo_score              Int
  image_score            Int
  handle_quality         Float?
  template_score         Int
  seo_optimization_score Float?
  collection_age         Int?
  update_frequency       Float?
  lifecycle_stage        String?  @db.VarChar(50)
  last_computed_at       DateTime @db.Timestamp(6)
  id                     String   @id @db.VarChar
  created_at             DateTime @db.Timestamp(6)
  updated_at             DateTime @db.Timestamp(6)
  shop_id                String   @db.VarChar
  shops                  shops    @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, collection_id], map: "ix_collection_features_shop_id_collection_id")
  @@index([performance_score], map: "ix_collection_features_performance_score")
  @@index([product_count], map: "ix_collection_features_product_count")
  @@index([shop_id], map: "ix_collection_features_shop_id")
  @@index([shop_id, performance_score], map: "ix_collection_features_shop_id_performance_score")
  @@index([shop_id, product_count], map: "ix_collection_features_shop_id_product_count")
  @@index([shop_id, view_count_30d, performance_score], map: "ix_collection_features_shop_id_view_count_30d_performance")
}

model customer_behavior_features {
  session_count                  Int
  avg_events_per_session         Float?
  total_event_count              Int
  product_view_count             Int
  collection_view_count          Int
  cart_add_count                 Int
  cart_view_count                Int
  cart_remove_count              Int
  search_count                   Int
  checkout_start_count           Int
  purchase_count                 Int
  days_since_first_event         Int
  days_since_last_event          Int
  most_active_hour               Int?
  most_active_day                Int?
  unique_products_viewed         Int
  unique_collections_viewed      Int
  search_terms                   Json     @db.Json
  top_categories                 Json     @db.Json
  device_type                    String?  @db.VarChar(20)
  primary_referrer               String?  @db.VarChar(255)
  browse_to_cart_rate            Float?
  cart_to_purchase_rate          Float?
  search_to_purchase_rate        Float?
  engagement_score               Float
  recency_score                  Float
  diversity_score                Float
  behavioral_score               Float
  total_unified_sessions         Int
  cross_session_span_days        Int
  session_frequency_score        Float
  device_diversity               Int
  avg_session_duration           Float?
  phoenix_interaction_count      Int
  apollo_interaction_count       Int
  venus_interaction_count        Int
  atlas_interaction_count        Int
  extension_engagement_score     Float
  recommendation_click_rate      Float
  upsell_interaction_count       Int
  total_interactions_in_sessions Int
  avg_interactions_per_session   Float
  session_engagement_score       Float
  multi_touch_attribution_score  Float
  attribution_revenue            Float
  conversion_path_length         Int
  browser_type                   String?  @db.VarChar(50)
  os_type                        String?  @db.VarChar(50)
  screen_resolution              String?  @db.VarChar(20)
  country                        String?  @db.VarChar(100)
  region                         String?  @db.VarChar(100)
  city                           String?  @db.VarChar(100)
  timezone                       String?  @db.VarChar(50)
  language                       String?  @db.VarChar(10)
  referrer_type                  String?  @db.VarChar(50)
  traffic_source                 String?  @db.VarChar(50)
  device_consistency             Float?
  last_computed_at               DateTime @db.Timestamp(6)
  id                             String   @id @db.VarChar
  created_at                     DateTime @db.Timestamp(6)
  updated_at                     DateTime @db.Timestamp(6)
  shop_id                        String   @db.VarChar
  customer_id                    String?  @db.VarChar
  shops                          shops    @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, customer_id], map: "ix_customer_behavior_features_shop_id_customer_id")
  @@index([behavioral_score], map: "ix_customer_behavior_features_behavioral_score")
  @@index([customer_id], map: "ix_customer_behavior_features_customer_id")
  @@index([days_since_last_event], map: "ix_customer_behavior_features_days_since_last_event")
  @@index([engagement_score], map: "ix_customer_behavior_features_engagement_score")
  @@index([extension_engagement_score], map: "ix_customer_behavior_features_extension_engagement_score")
  @@index([multi_touch_attribution_score], map: "ix_customer_behavior_features_multi_touch_attribution_score")
  @@index([shop_id], map: "ix_customer_behavior_features_shop_id")
  @@index([shop_id, behavioral_score], map: "ix_customer_behavior_features_shop_id_behavioral_score")
  @@index([shop_id, days_since_last_event], map: "ix_customer_behavior_features_shop_id_days_since_last_event")
  @@index([shop_id, engagement_score, behavioral_score], map: "ix_customer_behavior_features_shop_id_engagement_behavioral")
  @@index([shop_id, engagement_score], map: "ix_customer_behavior_features_shop_id_engagement_score")
  @@index([shop_id, extension_engagement_score], map: "ix_customer_behavior_features_shop_id_ext_engagement")
  @@index([shop_id, multi_touch_attribution_score], map: "ix_customer_behavior_features_shop_id_multi_touch_attr")
  @@index([shop_id, total_unified_sessions], map: "ix_customer_behavior_features_shop_id_total_unified_sessions")
  @@index([total_unified_sessions], map: "ix_customer_behavior_features_total_unified_sessions")
}

model extension_activities {
  extension_type     String   @db.VarChar
  extension_uid      String   @db.VarChar(255)
  extension_name     String   @db.VarChar(100)
  app_block_target   String?  @db.VarChar
  page_url           String?  @db.VarChar(500)
  app_block_location String?  @db.VarChar(100)
  last_seen          DateTime @db.Timestamp(6)
  is_active          Boolean
  id                 String   @id @db.VarChar
  created_at         DateTime @db.Timestamp(6)
  updated_at         DateTime @db.Timestamp(6)
  shop_id            String   @db.VarChar
  shops              shops    @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, extension_type, extension_uid], map: "ix_extension_activity_shop_id_extension_type_extension_uid")
  @@index([extension_type], map: "ix_extension_activities_extension_type")
  @@index([last_seen], map: "ix_extension_activities_last_seen")
  @@index([shop_id], map: "ix_extension_activities_shop_id")
  @@index([extension_type], map: "ix_extension_activity_extension_type")
  @@index([extension_type, last_seen], map: "ix_extension_activity_extension_type_last_seen")
  @@index([last_seen], map: "ix_extension_activity_last_seen")
  @@index([shop_id], map: "ix_extension_activity_shop_id")
  @@index([shop_id, last_seen], map: "ix_extension_activity_shop_id_last_seen")
}

model interaction_features {
  view_count            Int
  cart_add_count        Int
  cart_view_count       Int
  cart_remove_count     Int
  purchase_count        Int
  first_view_date       DateTime? @db.Timestamp(6)
  last_view_date        DateTime? @db.Timestamp(6)
  first_purchase_date   DateTime? @db.Timestamp(6)
  last_purchase_date    DateTime? @db.Timestamp(6)
  view_to_purchase_days Int?
  interaction_span_days Int?
  interaction_score     Float
  affinity_score        Float?
  refunded_purchases    Int
  refund_rate           Float
  total_refunded_amount Float
  net_purchase_value    Float
  refund_risk_score     Float
  last_computed_at      DateTime  @db.Timestamp(6)
  id                    String    @id @db.VarChar
  created_at            DateTime  @db.Timestamp(6)
  updated_at            DateTime  @db.Timestamp(6)
  shop_id               String    @db.VarChar
  customer_id           String?   @db.VarChar
  product_id            String?   @db.VarChar
  shops                 shops     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, customer_id, product_id], map: "ix_interaction_features_shop_id_customer_id_product_id")
  @@index([customer_id], map: "ix_interaction_features_customer_id")
  @@index([interaction_score], map: "ix_interaction_features_interaction_score")
  @@index([net_purchase_value], map: "ix_interaction_features_net_purchase_value")
  @@index([product_id], map: "ix_interaction_features_product_id")
  @@index([refund_rate], map: "ix_interaction_features_refund_rate")
  @@index([refund_risk_score], map: "ix_interaction_features_refund_risk_score")
  @@index([shop_id], map: "ix_interaction_features_shop_id")
  @@index([shop_id, customer_id], map: "ix_interaction_features_shop_id_customer_id")
  @@index([shop_id, customer_id, interaction_score], map: "ix_interaction_features_shop_id_customer_id_interaction_score")
  @@index([shop_id, interaction_score], map: "ix_interaction_features_shop_id_interaction_score")
  @@index([shop_id, net_purchase_value], map: "ix_interaction_features_shop_id_net_purchase_value")
  @@index([shop_id, product_id], map: "ix_interaction_features_shop_id_product_id")
  @@index([shop_id, refund_rate], map: "ix_interaction_features_shop_id_refund_rate")
  @@index([shop_id, refund_risk_score], map: "ix_interaction_features_shop_id_refund_risk_score")
}

model line_item_data {
  order_id   String    @db.VarChar
  product_id String?   @db.VarChar
  variant_id String?   @db.VarChar
  title      String?   @db.VarChar
  quantity   Int
  price      Float
  properties Json?     @db.Json
  id         String    @id @db.VarChar
  created_at DateTime  @db.Timestamp(6)
  updated_at DateTime  @db.Timestamp(6)
  OrderData  OrderData @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model pipeline_watermarks {
  data_type                 String    @db.VarChar(50)
  last_collected_at         DateTime? @db.Timestamp(6)
  last_normalized_at        DateTime? @db.Timestamp(6)
  last_features_computed_at DateTime? @db.Timestamp(6)
  last_gorse_synced_at      DateTime? @db.Timestamp(6)
  status                    String?   @db.VarChar(20)
  last_error                String?   @db.VarChar
  last_session_id           String?   @db.VarChar(100)
  last_window_start         DateTime? @db.Timestamp(6)
  last_window_end           DateTime? @db.Timestamp(6)
  updated_at                DateTime  @db.Timestamp(6)
  id                        String    @id @db.VarChar
  shop_id                   String    @db.VarChar
  shops                     shops     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, data_type], map: "ix_pipeline_watermark_shop_id_data_type")
  @@index([shop_id], map: "ix_pipeline_watermarks_shop_id")
}

model product_features {
  view_count_30d             Int
  unique_viewers_30d         Int
  cart_add_count_30d         Int
  cart_view_count_30d        Int
  cart_remove_count_30d      Int
  purchase_count_30d         Int
  unique_purchasers_30d      Int
  view_to_cart_rate          Float?
  cart_to_purchase_rate      Float?
  overall_conversion_rate    Float?
  cart_abandonment_rate      Float?
  cart_modification_rate     Float?
  cart_view_to_purchase_rate Float?
  last_viewed_at             DateTime? @db.Timestamp(6)
  last_purchased_at          DateTime? @db.Timestamp(6)
  first_purchased_at         DateTime? @db.Timestamp(6)
  days_since_first_purchase  Int?
  days_since_last_purchase   Int?
  avg_selling_price          Float?
  price_variance             Float?
  total_inventory            Int?
  inventory_turnover         Float?
  stock_velocity             Float?
  price_tier                 String?   @db.VarChar(20)
  variant_complexity         Float?
  image_richness             Float?
  tag_diversity              Float?
  metafield_utilization      Float?
  media_richness             Float?
  seo_optimization           Float?
  seo_title_length           Int?
  seo_description_length     Int?
  has_video_content          Boolean
  has_3d_content             Boolean
  media_count                Int
  has_online_store_url       Boolean
  has_preview_url            Boolean
  has_custom_template        Boolean
  popularity_score           Float
  trending_score             Float
  refunded_orders            Int
  refund_rate                Float
  total_refunded_amount      Float
  net_revenue                Float
  refund_risk_score          Float
  content_richness_score     Int
  description_length         Int
  description_html_length    Int
  product_age                Int?
  last_updated_days          Int?
  update_frequency           Float?
  product_type               String?   @db.VarChar(100)
  category_complexity        Float?
  availability_score         Float?
  status_stability           Float?
  last_computed_at           DateTime  @db.Timestamp(6)
  id                         String    @id @db.VarChar
  created_at                 DateTime  @db.Timestamp(6)
  updated_at                 DateTime  @db.Timestamp(6)
  shop_id                    String    @db.VarChar
  product_id                 String?   @db.VarChar
  shops                      shops     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, product_id], map: "ix_product_features_shop_id_product_id")
  @@index([net_revenue], map: "ix_product_features_net_revenue")
  @@index([popularity_score], map: "ix_product_features_popularity_score")
  @@index([product_id], map: "ix_product_features_product_id")
  @@index([refund_rate], map: "ix_product_features_refund_rate")
  @@index([refund_risk_score], map: "ix_product_features_refund_risk_score")
  @@index([shop_id], map: "ix_product_features_shop_id")
  @@index([shop_id, net_revenue], map: "ix_product_features_shop_id_net_revenue")
  @@index([shop_id, popularity_score], map: "ix_product_features_shop_id_popularity_score")
  @@index([shop_id, popularity_score, trending_score], map: "ix_product_features_shop_id_popularity_trending")
  @@index([shop_id, purchase_count_30d], map: "ix_product_features_shop_id_purchase_count_30d")
  @@index([shop_id, refund_rate], map: "ix_product_features_shop_id_refund_rate")
  @@index([shop_id, refund_risk_score], map: "ix_product_features_shop_id_refund_risk_score")
  @@index([shop_id, trending_score], map: "ix_product_features_shop_id_trending_score")
  @@index([shop_id, view_count_30d], map: "ix_product_features_shop_id_view_count_30d")
  @@index([trending_score], map: "ix_product_features_trending_score")
}

model product_pair_features {
  product_id1        String    @db.VarChar
  product_id2        String    @db.VarChar
  co_purchase_count  Int
  co_view_count      Int
  co_cart_count      Int
  co_cart_views      Int
  co_cart_removes    Int
  support_score      Float?
  lift_score         Float?
  last_co_occurrence DateTime? @db.Timestamp(6)
  last_computed_at   DateTime  @db.Timestamp(6)
  id                 String    @id @db.VarChar
  created_at         DateTime  @db.Timestamp(6)
  updated_at         DateTime  @db.Timestamp(6)
  shop_id            String    @db.VarChar
  product_id         String?   @db.VarChar
  shops              shops     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, product_id1, product_id2], map: "ix_product_pair_features_shop_id_product_id1_product_id2")
  @@index([co_purchase_count], map: "ix_product_pair_features_co_purchase_count")
  @@index([product_id], map: "ix_product_pair_features_product_id")
  @@index([product_id1], map: "ix_product_pair_features_product_id1")
  @@index([product_id2], map: "ix_product_pair_features_product_id2")
  @@index([shop_id], map: "ix_product_pair_features_shop_id")
  @@index([shop_id, co_purchase_count], map: "ix_product_pair_features_shop_id_co_purchase_count")
  @@index([shop_id, product_id1], map: "ix_product_pair_features_shop_id_product_id1")
  @@index([shop_id, product_id1, co_purchase_count], map: "ix_product_pair_features_shop_id_product_id1_co_purchase_count")
  @@index([shop_id, product_id2], map: "ix_product_pair_features_shop_id_product_id2")
}

model purchase_attributions {
  session_id                String        @db.VarChar(255)
  order_id                  String        @db.VarChar(255)
  contributing_extensions   Json          @db.Json
  attribution_weights       Json          @db.Json
  total_revenue             Decimal       @db.Decimal(10, 2)
  attributed_revenue        Json          @db.Json
  total_interactions        Int
  interactions_by_extension Json          @db.Json
  purchase_at               DateTime      @db.Timestamp(6)
  attribution_algorithm     String        @db.VarChar(50)
  metadata                  Json          @db.Json
  id                        String        @id @db.VarChar
  created_at                DateTime      @db.Timestamp(6)
  updated_at                DateTime      @db.Timestamp(6)
  shop_id                   String        @db.VarChar
  customer_id               String?       @db.VarChar
  user_sessions             user_sessions @relation(fields: [session_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shops                     shops         @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, order_id], map: "ix_purchase_attribution_shop_id_order_id")
  @@index([customer_id], map: "ix_purchase_attribution_customer_id")
  @@index([order_id], map: "ix_purchase_attribution_order_id")
  @@index([purchase_at], map: "ix_purchase_attribution_purchase_at")
  @@index([session_id], map: "ix_purchase_attribution_session_id")
  @@index([shop_id], map: "ix_purchase_attribution_shop_id")
  @@index([shop_id, customer_id, purchase_at], map: "ix_purchase_attribution_shop_id_customer_id_purchase_at")
  @@index([shop_id, purchase_at], map: "ix_purchase_attribution_shop_id_purchase_at")
  @@index([customer_id], map: "ix_purchase_attributions_customer_id")
  @@index([order_id], map: "ix_purchase_attributions_order_id")
  @@index([purchase_at], map: "ix_purchase_attributions_purchase_at")
  @@index([shop_id], map: "ix_purchase_attributions_shop_id")
}

model raw_collections {
  payload            Json      @db.Json
  extracted_at       DateTime  @db.Timestamp(6)
  shopify_id         String?   @db.VarChar(100)
  shopify_created_at DateTime? @db.Timestamp(6)
  shopify_updated_at DateTime? @db.Timestamp(6)
  source             String?   @db.VarChar
  format             String?   @db.VarChar
  received_at        DateTime? @db.Timestamp(6)
  id                 String    @id @db.VarChar
  shop_id            String    @db.VarChar
  shops              shops     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([shop_id, format], map: "ix_raw_collection_shop_id_format")
  @@index([shop_id, shopify_created_at], map: "ix_raw_collection_shop_id_shopify_created_at")
  @@index([shop_id, shopify_id], map: "ix_raw_collection_shop_id_shopify_id")
  @@index([shop_id, shopify_updated_at], map: "ix_raw_collection_shop_id_shopify_updated_at")
  @@index([shop_id, source], map: "ix_raw_collection_shop_id_source")
  @@index([format], map: "ix_raw_collections_format")
  @@index([shop_id], map: "ix_raw_collections_shop_id")
  @@index([source], map: "ix_raw_collections_source")
}

model raw_customers {
  payload            Json      @db.Json
  extracted_at       DateTime  @db.Timestamp(6)
  shopify_id         String?   @db.VarChar(100)
  shopify_created_at DateTime? @db.Timestamp(6)
  shopify_updated_at DateTime? @db.Timestamp(6)
  source             String?   @db.VarChar
  format             String?   @db.VarChar
  received_at        DateTime? @db.Timestamp(6)
  id                 String    @id @db.VarChar
  shop_id            String    @db.VarChar
  shops              shops     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([shop_id, format], map: "ix_raw_customer_shop_id_format")
  @@index([shop_id, shopify_created_at], map: "ix_raw_customer_shop_id_shopify_created_at")
  @@index([shop_id, shopify_id], map: "ix_raw_customer_shop_id_shopify_id")
  @@index([shop_id, shopify_updated_at], map: "ix_raw_customer_shop_id_shopify_updated_at")
  @@index([shop_id, source], map: "ix_raw_customer_shop_id_source")
  @@index([format], map: "ix_raw_customers_format")
  @@index([shop_id], map: "ix_raw_customers_shop_id")
  @@index([source], map: "ix_raw_customers_source")
}

model raw_orders {
  payload            Json      @db.Json
  extracted_at       DateTime  @db.Timestamp(6)
  shopify_id         String?   @db.VarChar(100)
  shopify_created_at DateTime? @db.Timestamp(6)
  shopify_updated_at DateTime? @db.Timestamp(6)
  source             String?   @db.VarChar
  format             String?   @db.VarChar
  received_at        DateTime? @db.Timestamp(6)
  id                 String    @id @db.VarChar
  shop_id            String    @db.VarChar
  shops              shops     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([shop_id, format], map: "ix_raw_order_shop_id_format")
  @@index([shop_id, shopify_created_at], map: "ix_raw_order_shop_id_shopify_created_at")
  @@index([shop_id, shopify_id], map: "ix_raw_order_shop_id_shopify_id")
  @@index([shop_id, shopify_updated_at], map: "ix_raw_order_shop_id_shopify_updated_at")
  @@index([shop_id, source], map: "ix_raw_order_shop_id_source")
  @@index([format], map: "ix_raw_orders_format")
  @@index([shop_id], map: "ix_raw_orders_shop_id")
  @@index([source], map: "ix_raw_orders_source")
}

model raw_products {
  payload            Json      @db.Json
  extracted_at       DateTime  @db.Timestamp(6)
  shopify_id         String?   @db.VarChar(100)
  shopify_created_at DateTime? @db.Timestamp(6)
  shopify_updated_at DateTime? @db.Timestamp(6)
  source             String?   @db.VarChar
  format             String?   @db.VarChar
  received_at        DateTime? @db.Timestamp(6)
  id                 String    @id @db.VarChar
  shop_id            String    @db.VarChar
  shops              shops     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([shop_id, format], map: "ix_raw_product_shop_id_format")
  @@index([shop_id, shopify_created_at], map: "ix_raw_product_shop_id_shopify_created_at")
  @@index([shop_id, shopify_id], map: "ix_raw_product_shop_id_shopify_id")
  @@index([shop_id, shopify_updated_at], map: "ix_raw_product_shop_id_shopify_updated_at")
  @@index([shop_id, source], map: "ix_raw_product_shop_id_source")
  @@index([format], map: "ix_raw_products_format")
  @@index([shop_id], map: "ix_raw_products_shop_id")
  @@index([source], map: "ix_raw_products_source")
}

model refund_attribution_adjustments {
  order_id             BigInt
  refund_id            String      @db.VarChar
  per_extension_refund Json        @db.Json
  total_refund_amount  Decimal     @db.Decimal(10, 2)
  computed_at          DateTime    @db.Timestamp(6)
  metadata             Json        @db.Json
  id                   String      @id @db.VarChar
  created_at           DateTime    @db.Timestamp(6)
  updated_at           DateTime    @db.Timestamp(6)
  shop_id              String      @db.VarChar
  refund_data          refund_data @relation(fields: [refund_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shops                shops       @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, refund_id], map: "ix_refund_attribution_adjustment_shop_id_refund_id")
  @@index([computed_at], map: "ix_refund_attribution_adjustment_computed_at")
  @@index([shop_id, order_id], map: "ix_refund_attribution_adjustment_shop_id_order_id")
  @@index([computed_at], map: "ix_refund_attribution_adjustments_computed_at")
  @@index([shop_id], map: "ix_refund_attribution_adjustments_shop_id")
}

model refund_data {
  order_id                       BigInt
  refund_id                      String                           @db.VarChar(255)
  refunded_at                    DateTime                         @db.Timestamp(6)
  note                           String?                          @db.VarChar
  restock                        Boolean
  total_refund_amount            Decimal                          @db.Decimal(10, 2)
  currency_code                  String                           @db.VarChar(10)
  id                             String                           @id @db.VarChar
  created_at                     DateTime                         @db.Timestamp(6)
  updated_at                     DateTime                         @db.Timestamp(6)
  shop_id                        String                           @db.VarChar
  refund_attribution_adjustments refund_attribution_adjustments[]
  shops                          shops                            @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  refund_line_item_data          refund_line_item_data[]

  @@unique([shop_id, refund_id], map: "ix_refund_data_shop_id_refund_id")
  @@index([refund_id], map: "ix_refund_data_refund_id")
  @@index([refunded_at], map: "ix_refund_data_refunded_at")
  @@index([shop_id], map: "ix_refund_data_shop_id")
  @@index([shop_id, order_id], map: "ix_refund_data_shop_id_order_id")
}

model refund_line_item_data {
  refund_id     String      @db.VarChar
  order_id      BigInt
  product_id    String?     @db.VarChar(255)
  variant_id    String?     @db.VarChar(255)
  quantity      Int
  unit_price    Decimal     @db.Decimal(10, 2)
  refund_amount Decimal     @db.Decimal(10, 2)
  properties    Json?       @db.Json
  id            String      @id @db.VarChar
  created_at    DateTime    @db.Timestamp(6)
  updated_at    DateTime    @db.Timestamp(6)
  refund_data   refund_data @relation(fields: [refund_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([order_id], map: "ix_refund_line_item_data_order_id")
  @@index([product_id], map: "ix_refund_line_item_data_product_id")
  @@index([refund_id], map: "ix_refund_line_item_data_refund_id")
}

model search_product_features {
  search_query       String    @db.VarChar(500)
  impression_count   Int
  click_count        Int
  purchase_count     Int
  avg_position       Float?
  click_through_rate Float?
  conversion_rate    Float?
  last_occurrence    DateTime? @db.Timestamp(6)
  last_computed_at   DateTime  @db.Timestamp(6)
  id                 String    @id @db.VarChar
  created_at         DateTime  @db.Timestamp(6)
  updated_at         DateTime  @db.Timestamp(6)
  shop_id            String    @db.VarChar
  product_id         String?   @db.VarChar
  shops              shops     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, search_query, product_id], map: "ix_search_product_features_shop_id_search_query_product_id")
  @@index([click_through_rate], map: "ix_search_product_features_click_through_rate")
  @@index([product_id], map: "ix_search_product_features_product_id")
  @@index([search_query], map: "ix_search_product_features_search_query")
  @@index([shop_id], map: "ix_search_product_features_shop_id")
  @@index([shop_id, click_through_rate], map: "ix_search_product_features_shop_id_click_through_rate")
  @@index([shop_id, product_id], map: "ix_search_product_features_shop_id_product_id")
  @@index([shop_id, search_query], map: "ix_search_product_features_shop_id_search_query")
  @@index([shop_id, search_query, click_through_rate], map: "ix_search_product_features_shop_id_search_query_ctr")
}

model session_features {
  session_id            String   @unique @db.VarChar
  start_time            DateTime @db.Timestamp(6)
  end_time              DateTime @db.Timestamp(6)
  duration_seconds      Int
  event_count           Int
  page_view_count       Int
  product_view_count    Int
  collection_view_count Int
  search_count          Int
  cart_add_count        Int
  cart_view_count       Int
  cart_remove_count     Int
  checkout_started      Boolean
  checkout_completed    Boolean
  order_value           Float?
  cart_viewed           Boolean
  cart_abandoned        Boolean
  device_type           String?  @db.VarChar(20)
  referrer_domain       String?  @db.VarChar(255)
  landing_page          String?  @db.VarChar(500)
  exit_page             String?  @db.VarChar(500)
  browser_type          String?  @db.VarChar(50)
  os_type               String?  @db.VarChar(50)
  screen_resolution     String?  @db.VarChar(20)
  country               String?  @db.VarChar(100)
  region                String?  @db.VarChar(100)
  city                  String?  @db.VarChar(100)
  timezone              String?  @db.VarChar(50)
  language              String?  @db.VarChar(10)
  referrer_type         String?  @db.VarChar(50)
  traffic_source        String?  @db.VarChar(50)
  device_consistency    Float?
  last_computed_at      DateTime @db.Timestamp(6)
  id                    String   @id @db.VarChar
  created_at            DateTime @db.Timestamp(6)
  updated_at            DateTime @db.Timestamp(6)
  shop_id               String   @db.VarChar
  customer_id           String?  @db.VarChar
  shops                 shops    @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, session_id], map: "ix_session_features_shop_id_session_id")
  @@index([checkout_completed], map: "ix_session_features_checkout_completed")
  @@index([customer_id], map: "ix_session_features_customer_id")
  @@index([shop_id], map: "ix_session_features_shop_id")
  @@index([shop_id, checkout_completed], map: "ix_session_features_shop_id_checkout_completed")
  @@index([shop_id, customer_id], map: "ix_session_features_shop_id_customer_id")
  @@index([shop_id, start_time], map: "ix_session_features_shop_id_start_time")
  @@index([shop_id, start_time, checkout_completed], map: "ix_session_features_shop_id_start_time_checkout_completed")
  @@index([start_time], map: "ix_session_features_start_time")
}

model sessions {
  id             String    @id @db.VarChar
  shop           String    @db.VarChar
  state          String    @db.VarChar
  isOnline       Boolean   @map("is_online")
  scope          String?   @db.VarChar(500)
  expires        DateTime? @db.Timestamp(6)
  accessToken    String    @map("access_token") @db.VarChar(1000)
  userId         BigInt?   @map("user_id")
  firstName      String?   @map("first_name") @db.VarChar(100)
  lastName       String?   @map("last_name") @db.VarChar(100)
  email          String?   @db.VarChar(255)
  accountOwner   Boolean   @map("account_owner")
  locale         String?   @db.VarChar(10)
  collaborator   Boolean?  @db.Boolean
  emailVerified  Boolean?  @map("email_verified")

  @@index([expires], map: "ix_sessions_expires")
  @@index([shop], map: "ix_sessions_shop")
}

model shops {
  shop_domain                    String                           @unique(map: "shop_domain_unique") @db.VarChar(255)
  custom_domain                  String?                          @db.VarChar(255)
  access_token                   String                           @db.VarChar(1000)
  plan_type                      String                           @db.VarChar(50)
  currency_code                  String?                          @db.VarChar(10)
  money_format                   String?                          @db.VarChar(100)
  is_active                      Boolean
  onboarding_completed           Boolean
  email                          String?                          @db.VarChar(255)
  last_analysis_at               DateTime?                        @db.Timestamp(6)
  id                             String                           @id @default(cuid()) @db.VarChar
  created_at                     DateTime                         @db.Timestamp(6)
  updated_at                     DateTime                         @db.Timestamp(6)
  CollectionData                 CollectionData[]
  CustomerData                   CustomerData[]
  OrderData                      OrderData[]
  ProductData                    ProductData[]
  billing_events                 billing_events[]
  billing_invoices               billing_invoices[]
  billing_plans                  billing_plans?
  collection_features            collection_features[]
  customer_behavior_features     customer_behavior_features[]
  extension_activities           extension_activities[]
  interaction_features           interaction_features[]
  pipeline_watermarks            pipeline_watermarks[]
  product_features               product_features[]
  product_pair_features          product_pair_features[]
  purchase_attributions          purchase_attributions[]
  raw_collections                raw_collections[]
  raw_customers                  raw_customers[]
  raw_orders                     raw_orders[]
  raw_products                   raw_products[]
  refund_attribution_adjustments refund_attribution_adjustments[]
  refund_data                    refund_data[]
  search_product_features        search_product_features[]
  session_features               session_features[]
  user_features                  user_features[]
  user_identity_links            user_identity_links[]
  user_interactions              user_interactions[]
  user_sessions                  user_sessions[]

  @@index([is_active], map: "ix_shops_is_active")
  @@index([last_analysis_at], map: "ix_shops_last_analysis_at")
  @@index([plan_type], map: "ix_shops_plan_type")
  @@index([shop_domain], map: "ix_shops_shop_domain")
}

model user_features {
  total_purchases               Int
  total_spent                   Float
  avg_order_value               Float
  lifetime_value                Float
  days_since_first_order        Int?
  days_since_last_order         Int?
  avg_days_between_orders       Float?
  order_frequency_per_month     Float?
  distinct_products_purchased   Int
  distinct_categories_purchased Int
  preferred_category            String?   @db.VarChar(100)
  preferred_vendor              String?   @db.VarChar(255)
  price_point_preference        String?   @db.VarChar(20)
  orders_with_discount_count    Int
  discount_sensitivity          Float?
  avg_discount_amount           Float?
  customer_state                String?   @db.VarChar(50)
  is_verified_email             Boolean
  customer_age                  Int?
  has_default_address           Boolean
  geographic_region             String?   @db.VarChar(100)
  currency_preference           String?   @db.VarChar(10)
  customer_health_score         Int
  refunded_orders               Int
  refund_rate                   Float
  total_refunded_amount         Float
  net_lifetime_value            Float
  customer_email                String?   @db.VarChar(255)
  customer_first_name           String?   @db.VarChar(100)
  customer_last_name            String?   @db.VarChar(100)
  customer_location             Json?     @db.Json
  customer_tags                 Json?     @db.Json
  customer_created_at_shopify   DateTime? @db.Timestamp(6)
  customer_last_order_id        String?   @db.VarChar(100)
  customer_metafields           Json?     @db.Json
  customer_verified_email       Boolean
  customer_tax_exempt           Boolean
  customer_default_address      Json?     @db.Json
  customer_addresses            Json?     @db.Json
  customer_currency_code        String?   @db.VarChar(10)
  customer_locale               String?   @db.VarChar(10)
  last_computed_at              DateTime  @db.Timestamp(6)
  id                            String    @id @db.VarChar
  created_at                    DateTime  @db.Timestamp(6)
  updated_at                    DateTime  @db.Timestamp(6)
  shop_id                       String    @db.VarChar
  customer_id                   String?   @db.VarChar
  shops                         shops     @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, customer_id], map: "ix_user_features_shop_id_customer_id")
  @@index([customer_id], map: "ix_user_features_customer_id")
  @@index([customer_state], map: "ix_user_features_customer_state")
  @@index([days_since_last_order], map: "ix_user_features_days_since_last_order")
  @@index([is_verified_email], map: "ix_user_features_is_verified_email")
  @@index([net_lifetime_value], map: "ix_user_features_net_lifetime_value")
  @@index([refund_rate], map: "ix_user_features_refund_rate")
  @@index([shop_id], map: "ix_user_features_shop_id")
  @@index([shop_id, days_since_last_order], map: "ix_user_features_shop_id_days_since_last_order")
  @@index([shop_id, lifetime_value, days_since_last_order], map: "ix_user_features_shop_id_lifetime_value_days_since_last_order")
  @@index([shop_id, net_lifetime_value], map: "ix_user_features_shop_id_net_lifetime_value")
  @@index([shop_id, refund_rate], map: "ix_user_features_shop_id_refund_rate")
  @@index([shop_id, total_spent], map: "ix_user_features_shop_id_total_spent")
  @@index([total_spent], map: "ix_user_features_total_spent")
}

model user_identity_links {
  client_id   String   @db.VarChar
  customer_id String   @db.VarChar
  linked_at   DateTime @db.Timestamp(6)
  id          String   @id @db.VarChar
  created_at  DateTime @db.Timestamp(6)
  updated_at  DateTime @db.Timestamp(6)
  shop_id     String   @db.VarChar
  shops       shops    @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, client_id, customer_id], map: "ix_user_identity_link_shop_id_client_id_customer_id")
  @@index([shop_id, client_id], map: "ix_user_identity_link_shop_id_client_id")
  @@index([shop_id, customer_id], map: "ix_user_identity_link_shop_id_customer_id")
  @@index([client_id], map: "ix_user_identity_links_client_id")
  @@index([customer_id], map: "ix_user_identity_links_customer_id")
  @@index([shop_id], map: "ix_user_identity_links_shop_id")
}

model user_interactions {
  session_id       String        @db.VarChar(255)
  extension_type   String        @db.VarChar(50)
  interaction_type String        @db.VarChar(50)
  metadata         Json          @db.Json
  id               String        @id @db.VarChar
  created_at       DateTime      @db.Timestamp(6)
  updated_at       DateTime      @db.Timestamp(6)
  shop_id          String        @db.VarChar
  customer_id      String?       @db.VarChar
  user_sessions    user_sessions @relation(fields: [session_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shops            shops         @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "ix_user_interaction_created_at")
  @@index([customer_id], map: "ix_user_interaction_customer_id")
  @@index([extension_type], map: "ix_user_interaction_extension_type")
  @@index([interaction_type], map: "ix_user_interaction_interaction_type")
  @@index([session_id], map: "ix_user_interaction_session_id")
  @@index([shop_id], map: "ix_user_interaction_shop_id")
  @@index([shop_id, customer_id, created_at], map: "ix_user_interaction_shop_id_customer_id_created_at")
  @@index([shop_id, extension_type], map: "ix_user_interaction_shop_id_extension_type")
  @@index([shop_id, interaction_type], map: "ix_user_interaction_shop_id_interaction_type")
  @@index([customer_id], map: "ix_user_interactions_customer_id")
  @@index([extension_type], map: "ix_user_interactions_extension_type")
  @@index([interaction_type], map: "ix_user_interactions_interaction_type")
  @@index([shop_id], map: "ix_user_interactions_shop_id")
}

model user_sessions {
  browser_session_id    String                  @db.VarChar(255)
  status                String                  @db.VarChar(50)
  last_active           DateTime                @db.Timestamp(6)
  expires_at            DateTime?               @db.Timestamp(6)
  user_agent            String?                 @db.VarChar
  ip_address            String?                 @db.VarChar(45)
  referrer              String?                 @db.VarChar
  extensions_used       Json                    @db.Json
  total_interactions    Int
  id                    String                  @id @db.VarChar
  created_at            DateTime                @db.Timestamp(6)
  updated_at            DateTime                @db.Timestamp(6)
  shop_id               String                  @db.VarChar
  customer_id           String?                 @db.VarChar
  purchase_attributions purchase_attributions[]
  user_interactions     user_interactions[]
  shops                 shops                   @relation(fields: [shop_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_id, customer_id, browser_session_id], map: "ix_user_session_shop_id_customer_id_browser_session_id")
  @@index([customer_id], map: "ix_user_session_customer_id")
  @@index([expires_at], map: "ix_user_session_expires_at")
  @@index([shop_id], map: "ix_user_session_shop_id")
  @@index([shop_id, customer_id, status], map: "ix_user_session_shop_id_customer_id_status")
  @@index([shop_id, status], map: "ix_user_session_shop_id_status")
  @@index([status], map: "ix_user_session_status")
  @@index([customer_id], map: "ix_user_sessions_customer_id")
  @@index([expires_at], map: "ix_user_sessions_expires_at")
  @@index([shop_id], map: "ix_user_sessions_shop_id")
  @@index([status], map: "ix_user_sessions_status")
}

enum AppBlockTarget {
  customer_account_order_status_block_render
  customer_account_order_index_block_render
  customer_account_profile_block_render
  checkout_post_purchase
  theme_app_extension
  web_pixel_extension
}

enum BillingCycle {
  monthly
  quarterly
  annually
}

enum BillingEventType {
  plan_created
  plan_updated
  metrics_calculated
  invoice_generated
  payment_received
  payment_failed
  refund_processed
  billing_suspended
  billing_reactivated
}

enum BillingPlanStatus {
  active
  inactive
  suspended
  trial
}

enum BillingPlanType {
  revenue_share
  performance_tier
  hybrid
  usage_based
}

enum ExtensionType {
  apollo
  atlas
  phoenix
  venus
}

enum InvoiceStatus {
  draft
  pending
  paid
  overdue
  cancelled
  refunded
}

enum RawDataFormat {
  rest
  graphql
}

enum RawSourceType {
  webhook
  backfill
}
