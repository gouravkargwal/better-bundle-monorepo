services:
  postgres:
    image: postgres:15
    container_name: betterbundle-postgres-dev
    environment:
      POSTGRES_DB: betterbundle
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka_b:
    image: bitnami/kafka:latest
    container_name: kafka_b_dev
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka_b:9094
      - KAFKA_CFG_LISTENERS=INTERNAL://:9093,EXTERNAL://:9092,CONTROLLER://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka_b:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=4
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-topics.sh --bootstrap-server localhost:9092 --list",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka-ui:
    container_name: kafka-ui-dev
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka_b
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-kafka-kraft
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka_b:9093
      DYNAMIC_CONFIG_ENABLED: "true"

  rest-proxy:
    image: confluentinc/cp-kafka-rest:latest
    depends_on:
      - kafka_b
    ports:
      - "8082:8082"
    hostname: rest-proxy
    container_name: rest-proxy-dev
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: "kafka_b:9093"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"

  redis:
    image: redis/redis-stack:7.2.0-v18
    container_name: betterbundle-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
      - "8002:8001" # Redis Insight UI
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # UPDATED GORSE - Connect to both PostgreSQL and ClickHouse
  gorse:
    image: zhenghaoz/gorse-in-one:latest
    container_name: betterbundle-gorse-dev
    restart: unless-stopped
    ports:
      - "8086:8086" # gRPC port
      - "8088:8088" # HTTP port
    environment:
      GORSE_CACHE_STORE: redis://redis:6379/0
      # Use PostgreSQL for Gorse's internal data
      GORSE_DATA_STORE: postgresql://postgres:postgres@postgres:5432/betterbundle?sslmode=disable
      GORSE_MASTER_HOST: 0.0.0.0
      GORSE_LOG_LEVEL: debug
      GORSE_API_KEY: secure_random_key_123
    command:
      - -c
      - /etc/gorse/config.toml
      - --log-path
      - /var/log/gorse/master.log
      - --cache-path
      - /var/lib/gorse/master_cache.data
    volumes:
      - ./config.toml:/etc/gorse/config.toml
      - gorse_logs:/var/log/gorse
      - gorse_cache:/var/lib/gorse
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  clickhouse_data:
  redis_data:
  kafka_data:
  gorse_logs:
  gorse_cache:
