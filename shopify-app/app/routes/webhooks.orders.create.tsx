import type { ActionFunctionArgs } from "@remix-run/node";
import { json } from "@remix-run/node";
import { authenticate } from "../shopify.server";
import { prisma } from "../core/database/prisma.server";

export const action = async ({ request }: ActionFunctionArgs) => {
  try {
    const { topic, shop, payload } = await authenticate.webhook(request);

    if (topic !== "orders/create") {
      return json(
        { success: false, error: "Invalid webhook topic" },
        { status: 400 },
      );
    }

    const order = payload as any;
    const shopId = shop;

    // Check if this order was generated by our widget
    const hasBetterBundleItems = order.line_items?.some((item: any) =>
      item.properties?.some(
        (prop: any) =>
          prop.name === "_created_by" && prop.value === "BetterBundle",
      ),
    );

    if (!hasBetterBundleItems) {
      // Not a widget-generated sale, just return success
      return json({
        success: true,
        message: "Order processed (not widget-generated)",
      });
    }

    // Calculate revenue from widget-generated items
    let widgetRevenue = 0;
    const widgetItems =
      order.line_items?.filter((item: any) =>
        item.properties?.some(
          (prop: any) =>
            prop.name === "_created_by" && prop.value === "BetterBundle",
        ),
      ) || [];

    widgetItems.forEach((item: any) => {
      widgetRevenue += parseFloat(item.price) * item.quantity;
    });

    if (widgetRevenue > 0) {
      // Calculate commission (5%)
      const commission = widgetRevenue * 0.05;
      const billingPeriod = new Date().toISOString().slice(0, 7); // "2024-01" format

      // Create tracked sale record
      await prisma.trackedSale.create({
        data: {
          shopId,
          shopifyOrderId: order.id.toString(),
          revenueGenerated: widgetRevenue,
          commissionOwed: commission,
          status: "pending",
          billingPeriod,
        },
      });

      console.log(
        `Tracked widget-generated sale: Order ${order.id}, Revenue: $${widgetRevenue}, Commission: $${commission}`,
      );
    }

    return json({
      success: true,
      message: "Widget-generated sale tracked successfully",
      revenue: widgetRevenue,
      commission: widgetRevenue * 0.05,
    });
  } catch (error) {
    console.error("Error processing order webhook:", error);
    return json(
      {
        success: false,
        error: "Failed to process order webhook",
      },
      { status: 500 },
    );
  }
};
